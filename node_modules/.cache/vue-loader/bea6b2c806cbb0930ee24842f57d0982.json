{"remainingRequest":"/Users/nirmalya/Documents/Developer/Projects/vue-vuex-jwt-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nirmalya/Documents/Developer/Projects/vue-vuex-jwt-auth/src/views/BoardUser.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nirmalya/Documents/Developer/Projects/vue-vuex-jwt-auth/src/views/BoardUser.vue","mtime":1591040088858},{"path":"/Users/nirmalya/Documents/Developer/Projects/vue-vuex-jwt-auth/node_modules/cache-loader/dist/cjs.js","mtime":1589998322908},{"path":"/Users/nirmalya/Documents/Developer/Projects/vue-vuex-jwt-auth/node_modules/babel-loader/lib/index.js","mtime":1585798713587},{"path":"/Users/nirmalya/Documents/Developer/Projects/vue-vuex-jwt-auth/node_modules/cache-loader/dist/cjs.js","mtime":1589998322908},{"path":"/Users/nirmalya/Documents/Developer/Projects/vue-vuex-jwt-auth/node_modules/vue-loader/lib/index.js","mtime":1589926857458}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\nimport UserService from '../services/user.service';\n\nexport default {\n  name: 'User',\n  data() {\n    return {\n      content: ''\n    };\n  },\n  mounted() {\n    UserService.getUserBoard().then(\n      response => {\n        this.content = response.data;\n      },\n      error => {\n        this.content =\n          (error.response && error.response.data) ||\n          error.message ||\n          error.toString();\n      }\n    );\n  }\n};\n",{"version":3,"sources":["BoardUser.vue"],"names":[],"mappings":";;;;;;;;;AASA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BoardUser.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container\">\n    <header class=\"jumbotron\">\n      <h3>{{content}}</h3>\n    </header>\n  </div>\n</template>\n\n<script>\nimport UserService from '../services/user.service';\n\nexport default {\n  name: 'User',\n  data() {\n    return {\n      content: ''\n    };\n  },\n  mounted() {\n    UserService.getUserBoard().then(\n      response => {\n        this.content = response.data;\n      },\n      error => {\n        this.content =\n          (error.response && error.response.data) ||\n          error.message ||\n          error.toString();\n      }\n    );\n  }\n};\n</script>\n"]}]}