{"remainingRequest":"/Users/nirmalya/Documents/Developer/Projects/vue-vuex-jwt-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nirmalya/Documents/Developer/Projects/vue-vuex-jwt-auth/src/views/Tables.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nirmalya/Documents/Developer/Projects/vue-vuex-jwt-auth/src/views/Tables.vue","mtime":1591066757979},{"path":"/Users/nirmalya/Documents/Developer/Projects/vue-vuex-jwt-auth/node_modules/cache-loader/dist/cjs.js","mtime":1589998322908},{"path":"/Users/nirmalya/Documents/Developer/Projects/vue-vuex-jwt-auth/node_modules/babel-loader/lib/index.js","mtime":1585798713587},{"path":"/Users/nirmalya/Documents/Developer/Projects/vue-vuex-jwt-auth/node_modules/cache-loader/dist/cjs.js","mtime":1589998322908},{"path":"/Users/nirmalya/Documents/Developer/Projects/vue-vuex-jwt-auth/node_modules/vue-loader/lib/index.js","mtime":1589926857458}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport UserService from '../services/user.service';\n\nexport default {\n  name: 'Tables',\n  data() {\n    return {\n      content: ''\n    };\n  },\n  mounted() {\n    UserService.getTables().then(\n      response => {\n        this.content = response.data;\n      },\n      error => {\n        this.content =\n          (error.response && error.response.data) ||\n          error.message ||\n          error.toString();\n      }\n    );\n  }\n};\n",{"version":3,"sources":["Tables.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Tables.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <h1>Tables</h1>\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Table Name</th>\n          <th scope=\"col\">Show</th>\n          <th scope=\"col\">Delete</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"table in content\" :key=\"table.id\">\n          <td>{{ table.table_name }}</td>\n          <td>\n            <router-link\n              :to=\"{ name: 'show', params: { tablename: table.tablename } }\"\n            >\n              <b-button pill variant=\"success\">Show</b-button>\n            </router-link>\n          </td>\n          <td>\n            <b-button pill variant=\"danger\">Delete</b-button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport UserService from '../services/user.service';\n\nexport default {\n  name: 'Tables',\n  data() {\n    return {\n      content: ''\n    };\n  },\n  mounted() {\n    UserService.getTables().then(\n      response => {\n        this.content = response.data;\n      },\n      error => {\n        this.content =\n          (error.response && error.response.data) ||\n          error.message ||\n          error.toString();\n      }\n    );\n  }\n};\n</script>\n\n<style></style>\n"]}]}