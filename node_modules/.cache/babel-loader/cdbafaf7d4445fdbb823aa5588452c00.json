{"remainingRequest":"/Users/nirmalya/Documents/Developer/Projects/vue-vuex-jwt-auth/node_modules/babel-loader/lib/index.js!/Users/nirmalya/Documents/Developer/Projects/vue-vuex-jwt-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nirmalya/Documents/Developer/Projects/vue-vuex-jwt-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nirmalya/Documents/Developer/Projects/vue-vuex-jwt-auth/src/views/dashboard/Tables.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nirmalya/Documents/Developer/Projects/vue-vuex-jwt-auth/src/views/dashboard/Tables.vue","mtime":1591083883167},{"path":"/Users/nirmalya/Documents/Developer/Projects/vue-vuex-jwt-auth/node_modules/cache-loader/dist/cjs.js","mtime":1589998322908},{"path":"/Users/nirmalya/Documents/Developer/Projects/vue-vuex-jwt-auth/node_modules/babel-loader/lib/index.js","mtime":1585798713587},{"path":"/Users/nirmalya/Documents/Developer/Projects/vue-vuex-jwt-auth/node_modules/cache-loader/dist/cjs.js","mtime":1589998322908},{"path":"/Users/nirmalya/Documents/Developer/Projects/vue-vuex-jwt-auth/node_modules/vue-loader/lib/index.js","mtime":1589926857458}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport UserService from '@/services/user.service';\nexport default {\n  name: 'Tables',\n  data: function data() {\n    return {\n      content: ''\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    UserService.getTables().then(function (response) {\n      _this.content = response.data;\n    }, function (error) {\n      _this.content = error.response && error.response.data || error.message || error.toString();\n    });\n  }\n};",{"version":3,"sources":["Tables.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,OAAA,WAAA,MAAA,yBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAPA,qBAOA;AAAA;;AACA,IAAA,WAAA,CAAA,SAAA,GAAA,IAAA,CACA,UAAA,QAAA,EAAA;AACA,MAAA,KAAA,CAAA,OAAA,GAAA,QAAA,CAAA,IAAA;AACA,KAHA,EAIA,UAAA,KAAA,EAAA;AACA,MAAA,KAAA,CAAA,OAAA,GACA,KAAA,CAAA,QAAA,IAAA,KAAA,CAAA,QAAA,CAAA,IAAA,IACA,KAAA,CAAA,OADA,IAEA,KAAA,CAAA,QAAA,EAHA;AAIA,KATA;AAWA;AAnBA,CAAA","sourcesContent":["<template>\n  <div>\n    <h1>Tables</h1>\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Table Name</th>\n          <th scope=\"col\">Show</th>\n          <th scope=\"col\">Delete</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"table in content\" :key=\"table.id\">\n          <td>{{ table.table_name }}</td>\n          <td>\n            <router-link\n              :to=\"{ name: 'Show', params: { tablename: table.table_name } }\"\n            >\n              <button type=\"button\" class=\"btn btn-success\">Show</button>\n            </router-link>\n          </td>\n          <td>\n            <button type=\"button\" class=\"btn btn-danger\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport UserService from '@/services/user.service';\n\nexport default {\n  name: 'Tables',\n  data() {\n    return {\n      content: ''\n    };\n  },\n  mounted() {\n    UserService.getTables().then(\n      response => {\n        this.content = response.data;\n      },\n      error => {\n        this.content =\n          (error.response && error.response.data) ||\n          error.message ||\n          error.toString();\n      }\n    );\n  }\n};\n</script>\n\n<style></style>\n"],"sourceRoot":"src/views/dashboard"}]}